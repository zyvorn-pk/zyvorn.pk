generator client {
  provider = "prisma-client"
  output   = "../src/lib/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum OrderStatus {
  PROCESSING
  DELIVERED
}

enum Province {
  PUNJAB
  SINDH
  BALOCHISTAN
  KPK
}

model Product {
  id               String      @id @default(uuid())
  title            String
  slug             String      @unique
  images           String[]
  originalPrice    Int         @map("original_price")
  discountedPrice  Int?        @map("discounted_price")
  shortDescription String?     @map("short_description")
  longDescription  String?     @map("long_description")
  createdAt        DateTime    @default(now()) @map("created_at")
  categoryId       String      @map("category_id")
  category         Category    @relation(fields: [categoryId], references: [id], onDelete: NoAction)
  reviews          Review[]
  variations       Variation[]
  orderItems       OrderItem[]

  @@index([id, slug, categoryId])
  @@map("products")
}

model Variation {
  id         String      @id @default(uuid())
  name       String
  color      String
  stock      Int         @default(1)
  productId  String      @map("product_id")
  product    Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@index([id, productId])
  @@map("variations")
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  slug     String    @unique
  products Product[]

  @@index([slug])
  @@map("categories")
}

model Review {
  id        Int      @id @default(autoincrement())
  name      String
  rating    Int
  comment   String
  image     String?
  createdAt DateTime @default(now()) @map("created_at")
  productId String   @map("product_id")
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([id, productId])
  @@map("reviews")
}

model Order {
  id        String      @id @default(uuid())
  name      String
  phone     String
  email     String
  address   String
  city      String
  zipCode   Int?        @map("zip_code")
  amount    Int
  province  Province
  status    OrderStatus @default(PROCESSING)
  createdAt DateTime    @default(now()) @map("created_at")
  items     OrderItem[]

  @@index([id, status])
  @@map("orders")
}

model OrderItem {
  id          String    @id @default(uuid())
  orderId     String    @map("order_id")
  order       Order     @relation(fields: [orderId], references: [id])
  productId   String    @map("product_id")
  product     Product   @relation(fields: [productId], references: [id])
  variationId String    @map("variation_id")
  variation   Variation @relation(fields: [variationId], references: [id])

  @@index([id, orderId, productId])
  @@map("order_items")
}
